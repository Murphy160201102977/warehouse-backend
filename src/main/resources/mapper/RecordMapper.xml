<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nurphy.warehouse.mapper.RecordMapper">
  <resultMap id="BaseResultMap" type="com.nurphy.warehouse.pojo.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="card_id" jdbcType="INTEGER" property="cardId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, card_id, store_id, `number`, `type`, user_id, created_date, updated_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.nurphy.warehouse.pojo.Record" useGeneratedKeys="true">
    insert into record (card_id, store_id, `number`, 
      `type`, user_id, created_date, 
      updated_date)
    values (#{cardId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{userId,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{updatedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.nurphy.warehouse.pojo.Record" useGeneratedKeys="true">
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        card_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nurphy.warehouse.pojo.Record">
    update record
    <set>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nurphy.warehouse.pojo.Record">
    update record
    set card_id = #{cardId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      `number` = #{number,jdbcType=INTEGER},
      `type` = #{type,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>